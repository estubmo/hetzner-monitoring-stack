services:
  prometheus:
    image: prom/prometheus:v2.50.1
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
  cadvisor:
    image: gcr.io/cadvisor/cadvisor-arm64:v0.49.1
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - redis
  redis:
    image: redis:latest
  hetzner_exporter:
    image: promhippie/hetzner-exporter:1.2.0
    restart: unless-stopped
    environment:
      - HETZNER_EXPORTER_USERNAME=${SERVICE_USER_HETZNER}
      - HETZNER_EXPORTER_PASSWORD=${SERVICE_PASSWORD_HETZNER}
      - HETZNER_EXPORTER_LOG_PRETTY=true

  # hetzner_load_balancer_exporter:
  #   image: wacken/hetzner-load-balancer-prometheus-exporter:v1.4.1
  #   restart: unless-stopped
  #   environment:
  #     # Supported string with specific id 11,22,33 or all for scraping metrics from all load balancers in the project
  #     - LOAD_BALANCER_IDS=
  #     # Path to a file containing the load balancer IDs
  #     - LOAD_BALANCER_IDS_PATH=
  #     # Hetzner API token
  #     - ACCESS_TOKEN=
  #     # Path to a file containing the Hetzner API token
  #     - ACCESS_TOKEN_PATH=
  #     # value in seconds, default value is 30 seconds
  #     - SCRAPE_INTERVAL=
  #     # Path to a file containing the scrape interval
  #     - SCRAPE_INTERVAL_PATH=
  grafana:
    image: grafana/grafana-oss:10.0.12
    environment:
      - SERVICE_FQDN_GRAFANA_3000
      - 'GF_SERVER_ROOT_URL=${SERVICE_FQDN_GRAFANA}'
      - 'GF_SERVER_DOMAIN=${SERVICE_FQDN_GRAFANA}'
      - 'GF_SECURITY_ADMIN_PASSWORD=${SERVICE_PASSWORD_GRAFANA}'
    volumes:
      - 'grafana-data:/var/lib/grafana'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:3000/api/health'
      interval: 5s
      timeout: 20s
      retries: 10
volumes:
  prom_data:
